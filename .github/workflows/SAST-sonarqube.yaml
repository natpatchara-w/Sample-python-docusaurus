name: SAST sonarqube workflow test
run-name: SAST sonarqube workflow test

env:
  SONARQUBE_SOURCES: .
  SONARQUBE_ARGS: -D sonar.python.version=3.12

on: [push]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set DEPLOY_ENV
        run: |
          echo "DEPLOY_ENV=dev" >> "$GITHUB_ENV"
          echo "DEPLOY_URL=localhost" >> "$GITHUB_ENV"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: 1.0
          # generate Docker tags based on the following events/attributes
          tags: |
            # branch event
            type=ref,event=branch
            # tag edge on default branch
            type=edge
            # dynamically set the branch name as a prefix
            type=sha,prefix=dev-,priority=750
    # For use in other jobs
    # Need to put a lot of variables here because reusable workflow context not support env.*
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
      image_tag: ${{ steps.meta.outputs.version }}
      deploy_env: ${{ env.DEPLOY_ENV }}
      deploy_url: ${{ env.DEPLOY_URL }}
      sonarqube_args: ${{ env.SONARQUBE_ARGS }}

  sonarqube:
    runs-on: ubuntu-latest
    needs:
      - setup
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Disabling shallow clones is recommended for improving the relevancy of reporting
          fetch-depth: 0
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v3
        with:
          args: >
            -D sonar.organization=${{ secrets.sonarqube_org }}
            -D sonar.projectKey=${{ secrets.sonarqube_project_key }}
            -D sonar.sources=${{ env.SONARQUBE_SOURCES }}
            -D sonar.qualitygate.wait=true
            ${{ env.SONARQUBE_ARGS }}
        env:
          SONAR_TOKEN: ${{ secrets.sonarqube_token }}
          SONAR_HOST_URL: ${{ secrets.sonarqube_host }}
      - name: Create SonarQube Report for DefectDojo
        if: always()
        run: |
          # Install Sonar Report
          mkdir -p ~/.local/bin
          npm config set prefix '~/.local/'
          npm install --global sonar-report@3.1.6

          # Always run SAST Report from SonarQube
          export PATH=~/.local/bin/:$PATH
          # On SonarQube Community edition, you only can use main branch
          sonar-report \
            --sonarorganization="${{ secrets.sonarqube_org }}" \
            --sonarurl="${{ secrets.sonarqube_host }}" \
            --sonartoken="${{ secrets.sonarqube_token }}" \
            --sonarcomponent="${{ secrets.sonarqube_project_key }}" \
            --project="${{ secrets.sonarqube_project_key }}" \
            --application="${{ secrets.sonarqube_project_key }}" \
            --release="1.0" \
            --output="sonar-report.html" \
            --branch="main" \
            > $SONAR_REPORT_OUTPUT_FILENAME 2>&1
      - name: Publish Sonar Report Output to Summary
        if: always()
        run: |
          if [[ -s $SONAR_REPORT_OUTPUT_FILENAME ]]; then
            {
              echo "### Sonar Report Output"
              echo "<details><summary>Click to expand</summary>"
              echo ""
              echo '```terraform'
              cat $SONAR_REPORT_OUTPUT_FILENAME
              echo '```'
              echo "</details>"
            } >> $GITHUB_STEP_SUMMARY
          fi
      - name: Upload Sonar Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sonar-report
          path: sonar-report.html
          retention-days: 30
    env:
      SONAR_REPORT_OUTPUT_FILENAME: sonar-report.txt